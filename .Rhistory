library(readr)
library(forecast)
library(TSA)
library(stringr)
library(quantmod)
df <- read_csv("~/Desktop/energy-prices-forecasting/dane.csv")
weekends=c(20180407,20180408,20180414,20180415,20180421,20180422,20180428,20180429,
20180501,20180503,20180505,20180506,20180512,20180513,20180519,20180520,
20180526,20180527,20180602,20180603,20180609,20180610,20180617,20180618)
weekeneds=cbind(weekends,rep(1,length(weekends)))
colnames(weekeneds)=c('Data','weekend')
df2=merge(df,weekeneds,by='Data',all.x = TRUE)
df2$weekend[is.na(df2$weekend)==T]=0
df2=df2[order(df2$Data,df2$godz),]
cro2=Lag(df2$cro,72)
cro3=Lag(df2$cro,73)
cro4=Lag(df2$cro,96)
cro5=Lag(df2$cro,168)
ma_cro2=(cro2+cro4)/2
ma_cro3=(cro2+cro4+cro5)/3
sd_cro1=apply(cbind(cro2,cro4),1,sd)
sd_cro2=apply(cbind(cro2,cro4,cro5),1,sd)
ratio_cro1=(ma_cro2-ma_cro3)/(sd_cro2+1)
ratio_cro2=(sd_cro1-sd_cro2)/(sd_cro2+1)
fix2=Lag(df2$rdn,24)
fix3=Lag(df2$rdn,25)
fix4=Lag(df2$rdn,48)
fix5=Lag(df2$rdn,72)
fix6=Lag(df2$rdn,168)
ma_fix2=(fix2+fix4)/2
ma_fix3=(fix2+fix4+fix5)/3
ma_fix4=(fix2+fix4+fix5+fix6)/4
sd_fix1=apply(cbind(fix2,fix4),1,sd)
sd_fix2=apply(cbind(cro2,cro4,cro5),1,sd)
se2=lag(df2$SE4,24)
se3=lag(df2$SE4,48)
se4=lag(df2$SE4,72)
z=cbind(cro2,cro3,cro4,cro5,ma_cro2,ma_cro3,sd_cro1,sd_cro2,ratio_cro1,ratio_cro2,
fix2,fix3,fix4,fix5,fix6,ma_fix2,ma_fix3,ma_fix4,sd_fix1,sd_fix2,
se2,se3,se4)
plot(df2$cro)
plot(df2$cro,type='l')
t=1:length(df2$cro)
h=cbind(df2$cro,t)
h2=scale(h)
h2
model0=kmeans(h2,5)
cro_segm=model0$cluster
cro_segm
cro_segm=model0$cluster+1
plot(df2$cro,type='l',col=cro_segm)
plot(df2$cro,col=cro_segm)
h=cbind(df2$cro,df$rdn,t)
h2=scale(h)
model0=kmeans(h2,5)
t
cro_segm=model0$cluster+1
plot(df2$cro,col=cro_segm)
h=cbind(df2$cro,df$rdn,t,ma_cro2,ma_fix2)
h2=scale(h)
model0=kmeans(h2,5)
cro_segm=model0$cluster+1
plot(df2$cro,col=cro_segm)
df3=cbind(df2,z)[200:,]
df3=as.data.frame(cbind(df2,z))[200:,]
df3=as.data.frame(cbind(df2,z))[200:]
df3=as.data.frame(cbind(df2,z))[200:,]
df3=cbind(df2,z)
df3[1:5,]
df3[200:,]
df3[200:n,]
n=nrow(df3)
df3=cbind(df2,z)[200:n,]
plot(df2$cro,type='l')
t=1:length(df2$cro)
h=cbind(df2$cro,df$rdn,t,ma_cro2,ma_fix2)
h2=scale(h)
model0=kmeans(h2,5)
h
nrow(df3)
n=nrow(df2)
df3=cbind(df2,z)[200:n,]
df3
plot(df2$cro,type='l')
t=1:length(df2$cro)
h=cbind(df2$cro,df$rdn,t,ma_cro2,ma_fix2)
h2=scale(h)
model0=kmeans(h2,5)
h=cbind(df3$cro,df3$rdn,t,df3$ma_cro2,df$ma_fix2)
z=cbind(cro2,cro3,cro4,cro5,ma_cro2,ma_cro3,sd_cro1,sd_cro2,ratio_cro1,ratio_cro2,
fix2,fix3,fix4,fix5,fix6,ma_fix2,ma_fix3,ma_fix4,sd_fix1,sd_fix2,
se2,se3,se4,t)
n=nrow(df2)
df3=cbind(df2,z)[200:n,]
plot(df2$cro,type='l')
h=cbind(df3$cro,df3$rdn,t,df3$ma_cro2,df$ma_fix2)
h=df3[c('rdn','cro','t','ma_cro2','ma_fix2')]
colnames(df3)
h=df3[c('rdn','cro','t','ma_cro2','ma_fix2')]
library(readr)
library(forecast)
library(TSA)
library(stringr)
library(quantmod)
train_df <- read_csv("~/Desktop/energy-prices-forecasting/train_df.csv")
train_df <- read_csv("~/Desktop/energy-prices-forecasting/train_df.csv")
test_df <- read_csv("~/Desktop/energy-prices-forecasting/test_df.csv")
train_df <- read_csv("~/Oskar/energy-prices-forecasting/train_df.csv")
test_df <- read_csv("~/Oskar/energy-prices-forecasting/test_df.csv")
train_df
rdn_ts=ts(train_df$lag_rdn_24, frequency=24)
rdn_ts
rdn_ts=ts(train_df$lag_rdn_24, frequency=24)
cro_ts=ts(train_df$lag_cro_72, frequency=24)
train_df <- read_csv("~/Oskar/energy-prices-forecasting/train_df.csv")
test_df <- read_csv("~/Oskar/energy-prices-forecasting/test_df.csv")
x_cols=c('deman','supply','wind_prod','reserve','weekend')
rdn_ts=ts(train_df$lag_rdn_24, frequency=24)
cro_ts=ts(train_df$lag_cro_72, frequency=24)
model1=arimax(log(rdn_ts+1),order=c(1,1,0),seasonal=c(1,0,0),xreg=train_df[x_cols])
train_df <- read_csv("~/Oskar/energy-prices-forecasting/train_df.csv")
test_df <- read_csv("~/Oskar/energy-prices-forecasting/test_df.csv")
x_cols=c('deman','supply','wind_prod','reserve','weekend')
rdn_ts=ts(train_df$lag_rdn_24, frequency=24)
cro_ts=ts(train_df$lag_cro_72, frequency=24)
model1=arimax(log(rdn_ts+1),order=c(1,1,0),seasonal=c(1,0,0),xreg=train_df[x_cols])
model2=arimax(log(cro_ts+1),order=c(1,1,0),seasonal=c(1,0,0),xreg=train_df[x_cols])
arima_rdn=as.vector(exp(stats::predict(model1,newx=train_df[x_cols]))$pred)-1)
arima_rdn=as.vector(exp(stats::predict(model1,newx=train_df[x_cols])$pred)-1)
arima_cro=as.vector(exp(stats::predict(model2,newx=train_df[x_cols])$pred)-1)
arima_rdn
arima_cro
model1=arimax(log(rdn_ts+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=train_df[x_cols])
model2=arimax(log(cro_ts+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=train_df[x_cols])
arima_rdn=as.vector(exp(stats::predict(model1,newx=train_df[x_cols])$pred)-1)
arima_cro=as.vector(exp(stats::predict(model2,newx=train_df[x_cols])$pred)-1)
arima_rdn
arima_cro
model01=auto.arima(rdn_ts)
model01
model01.predict(rdn_ts)
auto.arima(cro_ts)
model01=auto.arima(rdn_ts)
model02=auto.arima(cro_ts)
x_train2=cbind(x_train,arima_rdn,arima_cro)
x_train2=cbind(train_df,arima_rdn,arima_cro)
write_csv(x_train2,'~/Oskar/energy-prices-forecasting/train_df.csv')
rdn_ts
iters=nrow(x3)/24
iters=nrow(test_df)/24
pred_rdn=c()
pred_cro=c()
x=train_df[x_cols]
xt=test_df[x_cols]
y1=rdn_ts
y2=cro_ts
y_test1=test_df[rdn]
y_test1=test_df$rdn
y_test2=test_df$cro
for (i in 1:iters){
model1=arimax(log(y1+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=x)
model2=arimax(log(y2+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=x)
# forecasts
x_i=x3[(1+24*(i-1)):(24*i),]
pred_t1=as.vector(exp(stats::predict(model1,newx=x_i)$pred)-1)
pred_t2=as.vector(exp(stats::predict(model2,newx=x_i)$pred)-1)
pred_rdn=c(pred_rdn,pred_t1)
pred_cro=c(pred_cro,pred_t2)
x=rbind(x,x_i)
y1=ts(c(as.vector(y1),y_test1[(1+24*(i-1)):(24*i)]),frequency=24)
y2=ts(c(as.vector(y2),y_test2[(1+24*(i-1)):(24*i)]),frequency=24)
}
for (i in 1:iters){
model1=arimax(log(y1+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=x)
model2=arimax(log(y2+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=x)
# forecasts
x_i=xt[(1+24*(i-1)):(24*i),]
pred_t1=as.vector(exp(stats::predict(model1,newx=x_i)$pred)-1)
pred_t2=as.vector(exp(stats::predict(model2,newx=x_i)$pred)-1)
pred_rdn=c(pred_rdn,pred_t1)
pred_cro=c(pred_cro,pred_t2)
x=rbind(x,x_i)
y1=ts(c(as.vector(y1),y_test1[(1+24*(i-1)):(24*i)]),frequency=24)
y2=ts(c(as.vector(y2),y_test2[(1+24*(i-1)):(24*i)]),frequency=24)
}
train_df <- read_csv("~/Oskar/energy-prices-forecasting/train_df.csv")
test_df <- read_csv("~/Oskar/energy-prices-forecasting/test_df.csv")
x_cols=c('deman','supply','wind_prod','reserve','weekend')
source('~/Oskar/energy-prices-forecasting/feature_processing_and_arima.R')
source('~/Oskar/energy-prices-forecasting/feature_processing_and_arima.R')
source('~/Oskar/energy-prices-forecasting/feature_processing_and_arima.R')
write_csv(x_test2,'~/Oskar/energy-prices-forecasting/test_df.csv')
x_test2=cbind(test_df,arima_rdn,arima_cro)
arima_rdn=pred_rdn
arima_cro=pred_cro
x_test2=cbind(test_df,arima_rdn,arima_cro)
train_df <- read_csv("~/Oskar/energy-prices-forecasting/train_df.csv")
test_df <- read_csv("~/Oskar/energy-prices-forecasting/test_df.csv")
x_cols=c('deman','supply','wind_prod','reserve','weekend')
rdn_ts=ts(train_df$lag_rdn_24, frequency=24)
cro_ts=ts(train_df$lag_cro_72, frequency=24)
model1=arimax(log(rdn_ts+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=train_df[x_cols])
model2=arimax(log(cro_ts+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=train_df[x_cols])
arima_rdn=as.vector(exp(stats::predict(model1,newx=train_df[x_cols])$pred)-1)
arima_cro=as.vector(exp(stats::predict(model2,newx=train_df[x_cols])$pred)-1)
x_train2=cbind(train_df,arima_rdn,arima_cro)
write_csv(x_train2,'~/Oskar/energy-prices-forecasting/train_df.csv')
iters=nrow(test_df)/24
pred_rdn=c()
pred_cro=c()
x=train_df[x_cols]
xt=test_df[x_cols]
y1=rdn_ts
y2=cro_ts
y_test1=test_df$rdn
y_test2=test_df$cro
for (i in 1:iters){
model1=arimax(log(y1+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=x)
model2=arimax(log(y2+1),order=c(2,1,1),seasonal=c(1,0,0),xreg=x)
# forecasts
x_i=xt[(1+24*(i-1)):(24*i),]
pred_t1=as.vector(exp(stats::predict(model1,newx=x_i)$pred)-1)
pred_t2=as.vector(exp(stats::predict(model2,newx=x_i)$pred)-1)
pred_rdn=c(pred_rdn,pred_t1)
pred_cro=c(pred_cro,pred_t2)
x=rbind(x,x_i)
y1=ts(c(as.vector(y1),y_test1[(1+24*(i-1)):(24*i)]),frequency=24)
y2=ts(c(as.vector(y2),y_test2[(1+24*(i-1)):(24*i)]),frequency=24)
}
arima_rdn=pred_rdn
arima_cro=pred_cro
x_test2=cbind(test_df,arima_rdn,arima_cro)
write_csv(x_test2,'~/Oskar/energy-prices-forecasting/test_df.csv')
dim(test_df)
source('~/Oskar/energy-prices-forecasting/feature_processing_and_arima.R')
x_test2=cbind(test_df,arima_rdn,arima_cro)
write_csv(x_test2,'~/Oskar/energy-prices-forecasting/test_df.csv')
dim(test_df)
length(arim_rnd)
length(arim_rdn)
arima_rdn=pred_rdn
arima_cro=pred_cro
arima_rdn
length(arima_rdn)
dim(test_df)
iters
nrow(test_df)/24
source('~/Oskar/energy-prices-forecasting/feature_processing_and_arima.R')
iteres
iters
dim(test_df)
nrow(test_df)
344/24
